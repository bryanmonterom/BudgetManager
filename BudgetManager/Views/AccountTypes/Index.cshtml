@model IEnumerable<AccountType>
@{
    ViewData["Title"] = "Account Types";
}

<h1> Account Types</h1>
<h5>
    The account type refers to how we can group the accouts.
    Examples: Loans, credit cards, etc..
</h5>

<a asp-action="Create" class="btn btn-success mb-3">
    <i class="bi bi-plus-circle-fill"></i>
    Create a new Account Type</a>

<table class="table">
    <thead>
        <tr>
            <th>Actions</th>
            <th>Account Type</th>
        </tr>
    </thead>
    <tbody id="resortable">
        @foreach (var item in Model)
        {
            <tr>
                <td>
                    <input type="hidden" value="@item.Id" class="ids" />
                    <a class="btn btn-warning" asp-action="Edit" asp-route-id="@item.Id">Edit</a>
                    <a class="btn btn-danger" asp-action="Delete" asp-route-id="@item.Id">Delete</a>
                </td>
                <td>
                    @item.Name
                </td>

            </tr>
        }
    </tbody>
</table>

@section Scripts{

<script>

    const urlSort= '@Url.Action("Sort")';

    $(function(){
        $("#resortable").sortable({
            stop: async function(e, ui){
               await updatePositions();
            }
        });

       async function updatePositions(){
            const ids = getIds();
           await sentIdsToServer(ids);
        }

        function getIds(){
            const ids = $(".ids").map(function(){
            return $(this).val()
            }).get();

            return ids;
        }

       async function sentIdsToServer(ids){
            var data = JSON.stringify(ids);

            await fetch(urlSort,{
                method:'POST',
                body: data,
                headers:{
                    'Content-Type':'application/json'
                }
            });
        }
    });


</script>
}